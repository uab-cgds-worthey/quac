'''
USAGE:
module reset
module load Anaconda3/2020.02
module load snakemake/5.9.1-foss-2018b-Python-3.6.6

snakemake -s workflow/Snakefile --use-conda -p
'''
from pathlib import Path
import pandas as pd

WORKFLOW_PATH = Path(workflow.basedir).parent
configfile: WORKFLOW_PATH / "configs/workflow.yaml"


def get_samples(fpath):

    samples = ()
    with open(fpath, 'r') as f_handle:
        for line in f_handle:
            if line.startswith('#'):
                continue
            sample = line.split('\t')[1]
            samples += (sample,)

    return samples


EXTERNAL_DIR = Path("data/external")
RAW_DIR = Path("data/raw")
INTERIM_DIR = Path("data/interim")
PROCESSED_DIR = Path("data/processed")

LOGS_PATH = Path(config['logs_path'])
LOGS_PATH.mkdir(parents=True, exist_ok=True)
PROJECTS_PATH = Path(config['projects_path'])
PROJECT_NAME = config['project_name']
SAMPLES = get_samples(RAW_DIR / f"ped/{PROJECT_NAME}.ped")

##############   MODULES   ##############
include: "rules/somalier.smk"
include: "rules/indexcov.smk"
include: "rules/covviz.smk"
include: "rules/mosdepth.smk"
include: "rules/within_species_contamintation.smk"
#########################################


############   CONSTRAINTS   ############
wildcard_constraints:
    sample = '|'.join(SAMPLES),
    project = PROJECT_NAME
#########################################


rule all:
    input:
        # somalier
        expand(str(PROCESSED_DIR / "somalier/{project}/relatedness/somalier.html"),
            project=[PROJECT_NAME]),
        expand(str(PROCESSED_DIR / "somalier/{project}/ancestry/somalier.somalier-ancestry.html"),
            project=[PROJECT_NAME]),
        # indexcov
        expand(str(PROCESSED_DIR / "indexcov/{project}/index.html"),
            project=[PROJECT_NAME]),
        # covviz
        expand(str(PROCESSED_DIR / "covviz/{project}/covviz_report.html"),
            project=[PROJECT_NAME]),
        # mosdepth
        expand(str(INTERIM_DIR / "mosdepth/{project}/{sample}.mosdepth.global.dist.txt"),
            project=[PROJECT_NAME],
            sample=SAMPLES),
        # expand(str(INTERIM_DIR / "mosdepth/{project}/mosdepth_{project}.html"),
        #     project=[PROJECT_NAME]),
        #### within-species contamination QC ####
        # verifyBamID
        expand(str(PROCESSED_DIR / "verifyBamID/{project}/{sample}.Ancestry"),
            project=[PROJECT_NAME],
            sample=SAMPLES),
        # haplocheck
        expand(str(PROCESSED_DIR / "haplocheck/{project}/{sample}/haplocheck.txt"),
            project=[PROJECT_NAME],
            sample=SAMPLES),


