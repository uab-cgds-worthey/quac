"""
QuaC pipeline
"""

import pandas as pd

WORKFLOW_PATH = Path(workflow.basedir).parent


configfile: WORKFLOW_PATH / "configs/workflow.yaml"

# singularity image to use
singularity: "docker://continuumio/miniconda3:4.7.12"

##############   MODULES   ##############
include: "rules/common.smk"
include: "rules/relatedness_ancestry.smk"
include: "rules/coverage_analysis.smk"
include: "rules/within_species_contamintation.smk"
include: "rules/vcf_stats.smk"
include: "rules/aggregate_results.smk"


#########################################


############   CONSTRAINTS   ############
wildcard_constraints:
    sample="|".join(SAMPLES),
    project=PROJECT_NAME,


#########################################


WGS_ONLY_COVERAGE_TARGETS = []
if not EXOME_MODE:
    WGS_ONLY_COVERAGE_TARGETS = [
     # indexcov
     OUT_DIR / "analysis" / "project_level_qc" / "indexcov" / "index.html",
     # covviz
     OUT_DIR / "analysis" / "project_level_qc" / "covviz" / "covviz_report.html",
    ]


rule all:
    input:
        ##### ancestry and relatedness #####
        # somalier
        OUT_DIR / "analysis" / "project_level_qc" / "somalier" / "relatedness" / "somalier.html",
        OUT_DIR / "analysis" / "project_level_qc" / "somalier" / "ancestry" / "somalier.somalier-ancestry.html",
        ##### coverage #####
        # samtools
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "samtools-stats" / "{sample}.txt"),
            sample=SAMPLES),
        # qualimap
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "qualimap" / "{sample}" / "qualimapReport.html"),
            sample=SAMPLES),
        # mosdepth
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "mosdepth" / "{sample}.mosdepth.global.dist.txt"),
            sample=SAMPLES),
        OUT_DIR / "analysis" / "project_level_qc" / "mosdepth" / "mosdepth.html",
        # indexcov and covviz
        WGS_ONLY_COVERAGE_TARGETS,
        ##### cross-sample contamination #####
        # verifyBamID
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "verifyBamID" / "{sample}.Ancestry"),
            sample=SAMPLES),
        ##### VCF stats #####
        # bcftools
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "bcftools-stats" / "{sample}.bcftools.stats"),
            sample=SAMPLES),
        ##### results aggregation #####
        expand(str(OUT_DIR / "analysis" / "{sample}" / "qc" / "multiqc_initial_pass" / "{sample}_multiqc.html"),
            sample=SAMPLES),




